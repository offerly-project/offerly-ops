server {
    listen                  80;
    server_name             offerly.me;
    server_tokens           off;

    location /.well-known/acme-challenge/ {
        root                /var/www/certbot;
    }

    location / {
        return              301 https://offerly.me$request_uri;
    }
}

server {
    listen                  443 default_server ssl http2;
    listen                  [::]:443 ssl http2;

    server_name             offerly.me;

    ssl_certificate         /etc/nginx/ssl/live/offerly.me/fullchain.pem;
    ssl_certificate_key     /etc/nginx/ssl/live/offerly.me/privkey.pem;

    root                    /usr/share/nginx/offerly;

    location /api/ {
        proxy_pass          http://offerly-api:8000/;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        #                   Add CORS headers, only for the specific origin
        add_header          Access-Control-Allow-Origin https://offerly.me;
        add_header          Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header          Access-Control-Allow-Headers 'Content-Type, Authorization';

        #                   Handle OPTIONS preflight requests (required for CORS)
        if ($request_method = 'OPTIONS') {
            add_header      Access-Control-Allow-Origin https://offerly.me;
            add_header      Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header      Access-Control-Allow-Headers 'Content-Type, Authorization';
            return          204;
        }
    }
    location /admin/ {
        index               index.html;
        try_files           $uri $uri/ /admin/index.html;
    }

    location ~* \.css$ {
        add_header          Content-Type text/css;
    }
}