services:
  admin-ui-builder:
    build:
      context: ../offerly-admin-ui
      dockerfile: Dockerfile
    volumes:
      - offerly-admin-web-build:/app/dist
  offerly-api:
    container_name: offerly-api-c
    env_file:
      - .env
    environment:
      - PORT=8000
      - NODE_ENV=production
    build:
      context: ../offerly-api
      dockerfile: Dockerfile
      args:
        - DATA_DIR=${DATA_DIR}
        - UPLOADS_DIR=${UPLOADS_DIR}
        - COUNTRIES=${COUNTRIES}
        - CATEGORIES=${CATEGORIES}
        - LANGUAGES=${LANGUAGES}
    volumes:
      - offerly-uploads:${UPLOADS_DIR}
  nginx:
    container_name: offerly-nginx-c
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - offerly-admin-web-build:/usr/share/nginx/offerly/admin
      - ./nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./logo.png:/usr/share/nginx/offerly/static/logo.png
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - admin-ui-builder
      - offerly-api
  certbot:
    container_name: offerly-certbot-c
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
  # cron:
  #   container_name: offerly-cron-c
  #   build:
  #     context: ../offerly-cron
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env
  #
  offerly-scrappers:
    container_name: offerly-scrappers-c
    environment:
      - NODE_ENV=production
      - PORT=8001
    build:
      context: ../offerly-scrappers
      dockerfile: Dockerfile
    env_file:
      - .env
  offerly-redis:
    container_name: offerly-redis-c
    image: redis:7.4.2-alpine
networks:
  default:
    external: true
    name: offerly-network

volumes:
  offerly-admin-web-build:
  offerly-uploads:
    external: true
    name: offerly-uploads
